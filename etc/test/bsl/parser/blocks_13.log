

test: 13:
"{ b }:{node} => {b.left = b.right}"

tree1:  { b }:{node} => {b.left = b.right}
result: list([Define(), Block()])
    1 : Flow TK.PRODUCE(NONE, '=>', V=[Define(), Block()])
    2 :     Define TK.COLN(NONE, ':', V=None)
    3 :         Set TK.SET(LITERAL, '{', V=[Ref()])
    4 :             Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    5 :         Set TK.SET(LITERAL, '{', V=[Get()])
    6 :             Get TK.IDNT(IDENTIFIER, 'node', V=None)
    7 :     Block TK.BLOCK(SCOPE, '', V=[Define()])
    8 :         Define TK.EQLS(BINOP, '=', V=None)
    9 :             PropRef TK.REF(BINOP, '.', V=None)
   10 :                 Ref TK.IDNT(IDENTIFIER, 'b', V=None)
   11 :                 Ref TK.IDNT(IDENTIFIER, 'left', V=None)
   12 :             PropRef TK.REF(BINOP, '.', V=None)
   13 :                 Ref TK.IDNT(IDENTIFIER, 'b', V=None)
   14 :                 Ref TK.IDNT(IDENTIFIER, 'right', V=None)
