

test: 1:
close.sma(13) | signal(price, how='>')

tree1:  close.sma(13) | signal(price, how='>')
    1  : Flow{TK.CHAIN, '|' len=2}
    2  :     PropRef(TK.REF: close . FnCall(TK.FUNCTION, 'sma'))
    3  :         Get(TK.IDENT, 'close')
    4  :         FnCall('sma')
    5  :             Get(TK.IDENT, 'sma')
    6  :             List(TK.LIST, [Int()])
    7  :                 Int(TK.INT, 13)
    8  :     FnCall('signal')
    9  :         Ref(TK.IDENT, 'signal')
   10  :         List(TK.TUPLE, [Ref(), Define()])
   11  :             Ref(TK.IDENT, 'price')
   12  :             Define(TK.DEFINE: how = >)
   13  :                 Ref(TK.IDENT, 'how')
   14  :                 Str(TK.STR, '>')
