

test: 5:
"any:{ cross(close, sma(20), delay=1, threshold=0.01) } | buy"

tree1:  any:{ cross(close, sma(20), delay=1, threshold=0.01) } | buy
result: Lit(None)
    1 : UnaryOp TK.ANY(UNARY, 'any', V=None)
    2 :     Flow TK.CHAIN(NONE, '|', V=[Block(), ApplyChainProd()])
    3 :         Block TK.BLOCK(SCOPE, '', V=[FnCall()])
    4 :             FnCall TK.FUNCTION(BINOP, '(', V=None)
    5 :                 Get TK.IDNT(IDENTIFIER, 'cross', V=None)
    6 :                 List TK.TUPLE(LITERAL, '(', V=[Get(), FnCall(), Define(), Define()])
    7 :                     Get TK.IDNT(IDENTIFIER, 'close', V=None)
    8 :                     FnCall TK.FUNCTION(BINOP, '(', V=None)
    9 :                         Get TK.IDNT(IDENTIFIER, 'sma', V=None)
   10 :                         List TK.TUPLE(LITERAL, '(', V=[Int()])
   11 :                             Int TK.INT(LITERAL, '20', V=20)
   12 :                     Define TK.EQLS(BINOP, '=', V=None)
   13 :                         Ref TK.IDNT(IDENTIFIER, 'delay', V=None)
   14 :                         Int TK.INT(LITERAL, '1', V=1)
   15 :                     Define TK.EQLS(BINOP, '=', V=None)
   16 :                         Ref TK.IDNT(IDENTIFIER, 'threshold', V=None)
   17 :                         Float TK.FLOT(LITERAL, '0.01', V=0.01)
   18 :         ApplyChainProd TK.APPLY(UNARY, '|', V=None)
   19 :             Ref TK.BUY(IDENTIFIER, 'buy', V=None)
