

test: 5:
any:{ cross(close, sma(20), delay=1, threshold=0.01) } | buy

tree1:  any:{ cross(close, sma(20), delay=1, threshold=0.01) } | buy
    1  : UnaryOp(TK.ANY, TK.ANY, 'any')
    2  :     Flow(TK.CHAIN, v=[Block(), ApplyChainProd()], '|')
    3  :         Block(TK.BLOCK, v=[FnCall()], '')
    4  :             FnCall('cross')
    5  :                 Get(TK.IDNT, 'cross')
    6  :                 List(TK.TUPLE, [Get(), FnCall(), Define(), Define()])
    7  :                     Get(TK.IDNT, 'close')
    8  :                     FnCall('sma')
    9  :                         Get(TK.IDNT, 'sma')
   10  :                         List(TK.LIST, [Int()])
   11  :                             Int(TK.INT, 20)
   12  :                     Define(TK.DEFINE, TK.DEFINE, '=')
   13  :                         Ref(TK.IDNT, 'delay')
   14  :                         Int(TK.INT, 1)
   15  :                     Define(TK.DEFINE, TK.DEFINE, '=')
   16  :                         Ref(TK.IDNT, 'threshold')
   17  :                         Float(TK.FLOT, 0.01)
   18  :         ApplyChainProd(TK.DEFINE, TK.DEFINE, '|')
   19  :             Ref(TK.IDNT, 'buy')
