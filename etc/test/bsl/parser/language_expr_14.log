

test: 14:
close >| sma(10) and close <| sma(20) | signal >> open.delay(1d) | buy

tree1:  close >| sma(10) and close <| sma(20) | signal >> open.delay(1d) | buy
    1  : Flow{TK.CHAIN, '|' len=2}
    2  :     Flow{TK.APPLY, '>>' len=2}
    3  :         Flow{TK.CHAIN, '|' len=3}
    4  :             BinOp(TK.GTR, '>')
    5  :                 Get(TK.IDENT, 'close')
    6  :             BinOp(TK.AND, 'and')
    7  :                 FnCall('sma')
    8  :                     Ref(TK.IDENT, 'sma')
    9  :                     List(TK.LIST, [Int()])
   10  :                         Int(TK.INT, 10)
   11  :                 BinOp(TK.FALL_BELOW, '<|')
   12  :                     Ref(TK.IDENT, 'close')
   13  :                     FnCall('sma')
   14  :                         Ref(TK.IDENT, 'sma')
   15  :                         List(TK.LIST, [Int()])
   16  :                             Int(TK.INT, 20)
   17  :             ApplyChainProd(TK.APPLY: None | Ref(TK.IDENT, 'signal'))
   18  :                 Ref(TK.IDENT, 'signal')
   19  :         PropCall(TK.PROPCALL, 'open')
   20  :             Ref(TK.IDENT, 'open')
   21  :             List(TK.LIST, [Duration()])
   22  :                 Duration(TK.DUR, 1 day, 0:00:00)
   23  :     ApplyChainProd(TK.APPLY: None | Ref(TK.IDENT, 'buy'))
   24  :         Ref(TK.IDENT, 'buy')
