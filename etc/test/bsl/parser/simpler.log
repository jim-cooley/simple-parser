

test:
"rules0a := {
    buy:: any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal | delay(1d) | atr,
    sell:: close <| sma(10) | signal | delay(1d) | atr
}
rules0 := {
    close >| sma(10) | signal | delay(1d) | atr | buy,
    close <| sma(10) | signal | delay(1d) | atr | sell
}
rules1 => {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}
rules2 := {
    buy: any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr,
    sell: close <| sma(10) | signal >> delay(1d) | atr
}
rules3 := {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}
rules4 = {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}
def rules5 = {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}
"

tree1:  rules0a := {
result: Lit(None)
    1 : DefineVarFn TK.COEQ(NONE, ':=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'rules0a', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree2:  rules0 := {
result: Lit(None)
    1 : DefineVarFn TK.COEQ(NONE, ':=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'rules0', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree3:  rules1 => {
result: list([Get(), Block()])
    1 : Flow TK.PRODUCE(NONE, '=>', V=[Get(), Block()])
    2 :     Get TK.IDNT(IDENTIFIER, 'rules1', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree4:  rules2 := {
result: Lit(None)
    1 : DefineVarFn TK.COEQ(NONE, ':=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'rules2', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree5:  rules3 := {
result: Lit(None)
    1 : DefineVarFn TK.COEQ(NONE, ':=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'rules3', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree6:  rules4 = {
result: Lit(None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'rules4', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree7:  def rules5 = {
result: Lit(None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'rules5', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)
