

test: "rules = {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr => sell
}
"

tree1:
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 'rules', V=)
    3 :     Set TK.SET(SET, '{', V=[List(), List()])
    4 :         List TK.RAISE(LIST, '=>', V=[List(), Ident()])
    5 :             List TK.PIPE(LIST, '|', V=[List(), Ident()])
    6 :                 List TK.APPLY(LIST, '>>', V=[List(), FnCall()])
    7 :                     List TK.PIPE(LIST, '|', V=[BinOp(), Ident()])
    8 :                         BinOp TK.COLN(BINOP, ':', V=None)
    9 :                             BinOp TK.COLN(BINOP, ':', V=None)
   10 :                                 UnaryOp TK.ANY(UNARY, 'any', V=)
   11 :                                 Set TK.SET(SET, '{', V=[BinOp(), BinOp()])
   12 :                                     BinOp TK.RISE_ABOVE(BINOP, '>|', V=None)
   13 :                                         Ident TK.IDNT(DATASET, 'close', V=)
   14 :                                         FnCall TK.FUNCTION(BINOP, '(', V=None)
   15 :                                             Ident TK.IDNT(FUNCTION, 'sma', V=)
   16 :                                             List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
   17 :                                                 Int TK.INT(LITERAL, '10', V=10)
   18 :                                     BinOp TK.RISE_ABOVE(BINOP, '>|', V=None)
   19 :                                         Ident TK.IDNT(DATASET, 'close', V=)
   20 :                                         FnCall TK.FUNCTION(BINOP, '(', V=None)
   21 :                                             Ident TK.IDNT(FUNCTION, 'sma', V=)
   22 :                                             List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
   23 :                                                 Int TK.INT(LITERAL, '20', V=20)
   24 :                             BinOp TK.ASSIGN(BINOP, '=', V=None)
   25 :                                 Ident TK.IDNT(IDENTIFIER, 'threshold', V=)
   26 :                                 Float TK.FLOT(LITERAL, '0.01', V=0.01)
   27 :                         Ident TK.SIGNAL(KEYWORD, 'signal', V=)
   28 :                     FnCall TK.FUNCTION(BINOP, '(', V=None)
   29 :                         Ident TK.IDNT(IDENTIFIER, 'delay', V=)
   30 :                         List TK.PARAMETER_LIST(LIST, '(', V=[Duration()])
   31 :                             Duration TK.DUR(LITERAL, '1d', V=1 day, 0:00:00)
   32 :                 Ident TK.IDNT(IDENTIFIER, 'atr', V=)
   33 :             Ident TK.BUY(KEYWORD, 'buy', V=)
   34 :         List TK.RAISE(LIST, '=>', V=[List(), Ident()])
   35 :             List TK.PIPE(LIST, '|', V=[List(), Ident()])
   36 :                 List TK.APPLY(LIST, '>>', V=[List(), FnCall()])
   37 :                     List TK.PIPE(LIST, '|', V=[BinOp(), Ident()])
   38 :                         BinOp TK.FALL_BELOW(BINOP, '<|', V=None)
   39 :                             Ident TK.IDNT(DATASET, 'close', V=)
   40 :                             FnCall TK.FUNCTION(BINOP, '(', V=None)
   41 :                                 Ident TK.IDNT(FUNCTION, 'sma', V=)
   42 :                                 List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
   43 :                                     Int TK.INT(LITERAL, '10', V=10)
   44 :                         Ident TK.SIGNAL(KEYWORD, 'signal', V=)
   45 :                     FnCall TK.FUNCTION(BINOP, '(', V=None)
   46 :                         Ident TK.IDNT(IDENTIFIER, 'delay', V=)
   47 :                         List TK.PARAMETER_LIST(LIST, '(', V=[Duration()])
   48 :                             Duration TK.DUR(LITERAL, '1d', V=1 day, 0:00:00)
   49 :                 Ident TK.IDNT(IDENTIFIER, 'atr', V=)
   50 :             Ident TK.SELL(KEYWORD, 'sell', V=)

tree2:
