

test: 4:
close <| sma(10) | signal >> delay(1d) | atr => sell

tree1:  close <| sma(10) | signal >> delay(1d) | atr => sell
    1  : Flow{TK.CHAIN, '|' len=2}
    2  :     Flow{TK.APPLY, '>>' len=2}
    3  :         Flow{TK.CHAIN, '|' len=2}
    4  :             BinOp(TK.FALL_BELOW, '<|')
    5  :                 Get(TK.IDENT, 'close')
    6  :                 FnCall('sma')
    7  :                     Get(TK.IDENT, 'sma')
    8  :                     List(TK.LIST, [Int()])
    9  :                         Int(TK.INT, 10)
   10  :             ApplyChainProd(TK.APPLY: None | Ref(TK.IDENT, 'signal'))
   11  :                 Ref(TK.IDENT, 'signal')
   12  :         FnCall('delay')
   13  :             Ref(TK.IDENT, 'delay')
   14  :             List(TK.LIST, [Duration()])
   15  :                 Duration(TK.DUR, 1 day, 0:00:00)
   16  :     DefineFn(TK.PRODUCE: atr => Ref(TK.IDENT, 'sell'))
   17  :         Ref(TK.IDENT, 'atr')
   18  :         Ref(TK.IDENT, 'sell')
