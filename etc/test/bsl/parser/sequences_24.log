

test: 24:
(x, y, z) = {q, r, s}:{q=1, s=3, r=2}   # Define(TK.DEFINE: List(TK.TUPLE: Ref, Ref, Ref) '=' Combine( Set ':' List(TK.TUPLE: Define, Define, Define)  ) # NamedTuple() ?

tree1:  (x, y, z) = {q, r, s}:{q=1, s=3, r=2}   # Define(TK.DEFINE: List(TK.TUPLE: Ref, Ref, Ref) '=' Combine( Set ':' List(TK.TUPLE: Define, Define, Define)  ) # NamedTuple() ?
    1  : Define(TK.DEFINE: [count=2]:tup = Combine(TK.DEFINE, 'None'))
    2  :     Generate(TK.TUPLE, len=3)
    3  :         Ref(TK.IDENT, 'x')
    4  :         Ref(TK.IDENT, 'y')
    5  :         Ref(TK.IDENT, 'z')
    6  :     Combine(TK.COMBINE: [count=2]:set None Block(TK.BLOCK, ''))
    7  :         Generate(TK.SET, len=3)
    8  :             Ref(TK.IDENT, 'q')
    9  :             Ref(TK.IDENT, 'r')
   10  :             Ref(TK.IDENT, 's')
   11  :         Block{TK.BLOCK, len=3}
   12  :             Define(TK.DEFINE: q = 1)
   13  :                 Ref(TK.IDENT, 'q')
   14  :                 Int(TK.INT, 1)
   15  :             Define(TK.DEFINE: s = 3)
   16  :                 Ref(TK.IDENT, 's')
   17  :                 Int(TK.INT, 3)
   18  :             Define(TK.DEFINE: r = 2)
   19  :                 Ref(TK.IDENT, 'r')
   20  :                 Int(TK.INT, 2)
