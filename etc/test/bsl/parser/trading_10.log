

test: 10:
close <| sma(10) | signal >> delay(1d) | atr => sell

tree1:  close <| sma(10) | signal >> delay(1d) | atr => sell
    1  : Flow(TK.PRODUCE, v=[Flow(), ApplyChainProd()], '=>')
    2  :     Flow(TK.CHAIN, v=[Flow(), ApplyChainProd()], '|')
    3  :         Flow(TK.APPLY, v=[Flow(), FnCall()], '>>')
    4  :             Flow(TK.CHAIN, v=[BinOp(), ApplyChainProd()], '|')
    5  :                 BinOp(TK.FALL_BELOW, '<|')
    6  :                     Get(TK.IDNT, 'close')
    7  :                     FnCall('sma')
    8  :                         Get(TK.IDNT, 'sma')
    9  :                         List(TK.TUPLE, [Int()])
   10  :                             Int(TK.INT, 10)
   11  :                 ApplyChainProd(TK.DEFINE, TK.APPLY, '|')
   12  :                     Ref(TK.SIGNAL, 'signal')
   13  :             FnCall('delay')
   14  :                 Ref(TK.IDNT, 'delay')
   15  :                 List(TK.TUPLE, [Duration()])
   16  :                     Duration(TK.DUR, 1 day, 0:00:00)
   17  :         ApplyChainProd(TK.DEFINE, TK.APPLY, '|')
   18  :             Ref(TK.IDNT, 'atr')
   19  :     ApplyChainProd(TK.DEFINE, TK.APPLY, '=>')
   20  :         Ref(TK.SELL, 'sell')
