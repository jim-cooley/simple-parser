

test: 2:
any:{ close >| sma(10), close <| sma(20) }:(threshold=0.01) | signal >> avg | delay(1d) | buy

tree1:  any:{ close >| sma(10), close <| sma(20) }:(threshold=0.01) | signal >> avg | delay(1d) | buy
    1  : UnaryOp(TK.ANY, TK.ANY, 'any')
    2  :     Flow(TK.CHAIN, v=[Flow(), FnCall(), ApplyChainProd()], '|')
    3  :         Flow(TK.APPLY, v=[Flow(), ApplyChainProd()], '>>')
    4  :             Flow(TK.CHAIN, v=[Define(), ApplyChainProd()], '|')
    5  :                 Define(TK.DEFINE, TK.DEFINE, ':')
    6  :                     Block(TK.BLOCK, v=[Flow(), BinOp()], '')
    7  :                         Flow(TK.CHAIN, v=[BinOp(), FnCall()], '|')
    8  :                             BinOp(TK.GTR, '>')
    9  :                                 Ref(TK.IDENT, 'close')
   10  :                             FnCall('sma')
   11  :                                 Ref(TK.IDENT, 'sma')
   12  :                                 List(TK.LIST, [Int()])
   13  :                                     Int(TK.INT, 10)
   14  :                         BinOp(TK.FALL_BELOW, '<|')
   15  :                             Ref(TK.IDENT, 'close')
   16  :                             FnCall('sma')
   17  :                                 Ref(TK.IDENT, 'sma')
   18  :                                 List(TK.LIST, [Int()])
   19  :                                     Int(TK.INT, 20)
   20  :                     Define(TK.DEFINE, TK.DEFINE, '=')
   21  :                         Ref(TK.IDENT, 'threshold')
   22  :                         Float(TK.FLOT, 0.01)
   23  :                 ApplyChainProd(TK.DEFINE, TK.DEFINE, '|')
   24  :                     Ref(TK.IDENT, 'signal')
   25  :             ApplyChainProd(TK.DEFINE, TK.DEFINE, '>>')
   26  :                 Ref(TK.IDENT, 'avg')
   27  :         FnCall('delay')
   28  :             Ref(TK.IDENT, 'delay')
   29  :             List(TK.LIST, [Duration()])
   30  :                 Duration(TK.DUR, 1 day, 0:00:00)
   31  :         ApplyChainProd(TK.DEFINE, TK.DEFINE, '|')
   32  :             Ref(TK.IDENT, 'buy')
