

test: 9:
"node => { b : b.left = b.right}"

tree1:  node => { b : b.left = b.right}
result: list([Get(), Block()])
    1 : Flow TK.PRODUCE(NONE, '=>', V=[Get(), Block()])
    2 :     Get TK.IDNT(IDENTIFIER, 'node', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=[Define()])
    4 :         Define TK.COLN(NONE, ':', V=None)
    5 :             Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    6 :             Define TK.EQLS(BINOP, '=', V=None)
    7 :                 PropRef TK.REF(BINOP, '.', V=None)
    8 :                     Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    9 :                     Ref TK.IDNT(IDENTIFIER, 'left', V=None)
   10 :                 PropRef TK.REF(BINOP, '.', V=None)
   11 :                     Ref TK.IDNT(IDENTIFIER, 'b', V=None)
   12 :                     Ref TK.IDNT(IDENTIFIER, 'right', V=None)
