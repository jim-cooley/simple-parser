

test:
"# sample rules file for pyser / qtradr
%%backtest (period='train5', rules=rules)

atr := (high + low) / 2
median_price := (open + close) / 2
trade_size := position * 10%

def buy = { position += trade_size }
def sell = { position -= trade_size }

rules => {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}
rules2 := {
    buy: any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr,
    sell: close <| sma(10) | signal >> delay(1d) | atr
}
rules3 := {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}
rules4 = {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}
def rules5 = {
    any:{ close >| sma(10), close >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr => buy,
    close <| sma(10) | signal >> delay(1d) | atr -> sell
}

report := { trades | select('symbol', 'buy_date', 'buy_price', 'sell_date', 'sell_price') }

%%report (report)

"

tree1:  atr := (high + low) / 2
result: Lit(None)

tree2:  median_price := (open + close) / 2
result: Lit(None)

tree3:  trade_size := position * 10%
result: Lit(None)

tree4:  def buy = { position += trade_size }
result: Lit(None)

tree5:  def sell = { position -= trade_size }
result: Lit(None)

tree6:  rules => {
result: list([Get(), Block()])

tree7:  rules2 := {
result: Lit(None)

tree8:  rules3 := {
result: Lit(None)

tree9:  rules4 = {
result: Lit(None)

tree10:  def rules5 = {
result: Lit(None)

tree11:  report := { trades | select('symbol', 'buy_date', 'buy_price', 'sell_date', 'sell_price') }
result: Lit(None)

tree1:(post)  atr := (high + low) / 2
result: Lit(None)

tree2:(post)  median_price := (open + close) / 2
result: Lit(None)

tree3:(post)  trade_size := position * 10%
result: Lit(None)

tree4:(post)  def buy = { position += trade_size }
result: Lit(None)

tree5:(post)  def sell = { position -= trade_size }
result: Lit(None)

tree6:(post)  rules => {
result: list([Get(), Block()])

tree7:(post)  rules2 := {
result: Lit(None)

tree8:(post)  rules3 := {
result: Lit(None)

tree9:(post)  rules4 = {
result: Lit(None)

tree10:(post)  def rules5 = {
result: Lit(None)

tree11:(post)  report := { trades | select('symbol', 'buy_date', 'buy_price', 'sell_date', 'sell_price') }
result: Lit(None)

tree1:  %%backtest (period='train5', rules=rules)

tree2:  %%report (report)
