

test: 14:
node | { _ : _.left = _.right}

tree1:  node | { _ : _.left = _.right}
    1  : Flow{TK.CHAIN, '|' len=2}
    2  :     Get(TK.IDENT, 'node')
    3  :     Block{TK.BLOCK, len=1}
    4  :         Combine(TK.COMBINE: _ None Define(TK.DEFINE, '='))
    5  :             Ref(TK.ANON, '_')
    6  :             Define(TK.DEFINE: PropRef(TK.REF, '.') = PropRef(TK.REF, '.'))
    7  :                 PropRef(TK.REF: _ . Ref(TK.IDENT, 'left'))
    8  :                     Ref(TK.ANON, '_')
    9  :                     Ref(TK.IDENT, 'left')
   10  :                 PropRef(TK.REF: _ . Get(TK.IDENT, 'right'))
   11  :                     Get(TK.ANON, '_')
   12  :                     Get(TK.IDENT, 'right')

tree1:(post)  node | { _ : _.left = _.right}
result: list([Get(), Block()])
    1  : Flow{TK.CHAIN, '|' len=2}
    2  :     Get(TK.IDENT, 'node')
    3  :     Block{TK.BLOCK, len=1}
    4  :         Combine(TK.COMBINE: _ None Define(TK.DEFINE, '='))
    5  :             Ref(TK.ANON, '_')
    6  :             Define(TK.DEFINE: PropRef(TK.REF, '.') = PropRef(TK.REF, '.'))
    7  :                 PropRef(TK.REF: _ . Ref(TK.IDENT, 'left'))
    8  :                     Ref(TK.ANON, '_')
    9  :                     Ref(TK.IDENT, 'left')
   10  :                 PropRef(TK.REF: _ . Get(TK.IDENT, 'right'))
   11  :                     Get(TK.ANON, '_')
   12  :                     Get(TK.IDENT, 'right')
