

test: 4:
"f.a(x) = { var a(x):x*x }"

tree1:  f.a(x) = { var a(x):x*x }
result: Lit(None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ref TK.IDNT(IDENTIFIER, 'f', V=None)
    4 :         DefineFn TK.FUNCTION(BINOP, '(', V=None)
    5 :             Ref TK.IDNT(IDENTIFIER, 'a', V=None)
    6 :             List TK.TUPLE(LITERAL, '(', V=[Ref()])
    7 :                 Ref TK.IDNT(IDENTIFIER, 'x', V=None)
    8 :     Block TK.BLOCK(SCOPE, '', V=None)

tree1:(post)  f.a(x) = { var a(x):x*x }
result: Lit(None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ref TK.IDNT(IDENTIFIER, 'f', V=None)
    4 :         DefineFn TK.FUNCTION(BINOP, '(', V=None)
    5 :             Ref TK.IDNT(IDENTIFIER, 'a', V=None)
    6 :             List TK.TUPLE(LITERAL, '(', V=[Ref()])
    7 :                 Ref TK.IDNT(IDENTIFIER, 'x', V=None)
    8 :     Block TK.BLOCK(SCOPE, '', V=None)
