

test: 29:
a()*b().c().d()

tree1:  a()*b().c().d()
    1  : BinOp(TK.DOT, '.')
    2  :     BinOp(TK.DOT, '.')
    3  :         BinOp(TK.MUL, '*')
    4  :             FnCall('a')
    5  :                 Get(TK.IDENT, 'a')
    6  :                 List(TK.LIST, [])
    7  :             FnCall('b')
    8  :                 Get(TK.IDENT, 'b')
    9  :                 List(TK.LIST, [])
   10  :         FnCall('c')
   11  :             Get(TK.IDENT, 'c')
   12  :             List(TK.LIST, [])
   13  :     FnCall('d')
   14  :         Get(TK.IDENT, 'd')
   15  :         List(TK.LIST, [])

tree1:(post)  a()*b().c().d()
    1  : BinOp(TK.DOT, '.')
    2  :     BinOp(TK.DOT, '.')
    3  :         BinOp(TK.MUL, '*')
    4  :             FnCall('a')
    5  :                 Get(TK.IDENT, 'a')
    6  :                 List(TK.LIST, [])
    7  :             FnCall('b')
    8  :                 Get(TK.IDENT, 'b')
    9  :                 List(TK.LIST, [])
   10  :         FnCall('c')
   11  :             Get(TK.IDENT, 'c')
   12  :             List(TK.LIST, [])
   13  :     FnCall('d')
   14  :         Get(TK.IDENT, 'd')
   15  :         List(TK.LIST, [])
