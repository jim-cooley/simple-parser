

test: 18:
(x, y, z) = {q, r, s}:(1, 2, 3) # Define(TK.DEFINE: List(TK.TUPLE: Ref, Ref, Ref) '=' Combine( Set(Ref, Ref, Ref) ':' List(TK.TUPLE: Lit, Lit, Lit) ) )

tree1:  (x, y, z) = {q, r, s}:(1, 2, 3) # Define(TK.DEFINE: List(TK.TUPLE: Ref, Ref, Ref) '=' Combine( Set(Ref, Ref, Ref) ':' List(TK.TUPLE: Lit, Lit, Lit) ) )
    1  : Define(TK.DEFINE: ( = Combine(TK.DEFINE, 'None'))
    2  :     List(TK.TUPLE, [Ref(), Ref(), Ref()])
    3  :         Ref(TK.IDENT, 'x')
    4  :         Ref(TK.IDENT, 'y')
    5  :         Ref(TK.IDENT, 'z')
    6  :     Combine(TK.COMBINE:  None List[count=3])
    7  :         Set(TK.SET, [Ref(), Ref(), Ref()])
    8  :             Ref(TK.IDENT, 'q')
    9  :             Ref(TK.IDENT, 'r')
   10  :             Ref(TK.IDENT, 's')
   11  :         List(TK.TUPLE, [Int(), Int(), Int()])
   12  :             Int(TK.INT, 1)
   13  :             Int(TK.INT, 2)
   14  :             Int(TK.INT, 3)

tree1:(post)  (x, y, z) = {q, r, s}:(1, 2, 3) # Define(TK.DEFINE: List(TK.TUPLE: Ref, Ref, Ref) '=' Combine( Set(Ref, Ref, Ref) ':' List(TK.TUPLE: Lit, Lit, Lit) ) )
    1  : Define(TK.DEFINE: ( = Combine(TK.DEFINE, 'None'))
    2  :     List(TK.TUPLE, [Ref(), Ref(), Ref()])
    3  :         Ref(TK.IDENT, 'x')
    4  :         Ref(TK.IDENT, 'y')
    5  :         Ref(TK.IDENT, 'z')
    6  :     Combine(TK.COMBINE:  None List[count=3])
    7  :         Set(TK.SET, [Ref(), Ref(), Ref()])
    8  :             Ref(TK.IDENT, 'q')
    9  :             Ref(TK.IDENT, 'r')
   10  :             Ref(TK.IDENT, 's')
   11  :         List(TK.TUPLE, [Int(), Int(), Int()])
   12  :             Int(TK.INT, 1)
   13  :             Int(TK.INT, 2)
   14  :             Int(TK.INT, 3)
