

test: 9:
"a | b | c | d >> e | f | g > h"

tree1:  a | b | c | d >> e | f | g > h
result: list([Flow(), Get(), BinOp()])
    1 : Flow TK.CHAIN(NONE, '|', V=[Flow(), Get(), BinOp()])
    2 :     Flow TK.APPLY(NONE, '>>', V=[Flow(), ApplyChainProd()])
    3 :         Flow TK.CHAIN(NONE, '|', V=[Get(), Get(), Get(), ApplyChainProd()])
    4 :             Get TK.IDNT(IDENTIFIER, 'a', V=None)
    5 :             Get TK.IDNT(IDENTIFIER, 'b', V=None)
    6 :             Get TK.IDNT(IDENTIFIER, 'c', V=None)
    7 :             ApplyChainProd TK.APPLY(UNARY, '', V=None)
    8 :                 Ref TK.IDNT(IDENTIFIER, 'd', V=None)
    9 :         ApplyChainProd TK.APPLY(UNARY, '', V=None)
   10 :             Ref TK.IDNT(IDENTIFIER, 'e', V=None)
   11 :     Get TK.IDNT(IDENTIFIER, 'f', V=None)
   12 :     BinOp TK.GTR(BINOP, '>', V=None)
   13 :         Get TK.IDNT(IDENTIFIER, 'g', V=None)
   14 :         Get TK.IDNT(IDENTIFIER, 'h', V=None)

tree1:(post)  a | b | c | d >> e | f | g > h
result: list([Flow(), Get(), BinOp()])
    1 : Flow TK.CHAIN(NONE, '|', V=[Flow(), Get(), BinOp()])
    2 :     Flow TK.APPLY(NONE, '>>', V=[Flow(), ApplyChainProd()])
    3 :         Flow TK.CHAIN(NONE, '|', V=[Get(), Get(), Get(), ApplyChainProd()])
    4 :             Get TK.IDNT(IDENTIFIER, 'a', V=None)
    5 :             Get TK.IDNT(IDENTIFIER, 'b', V=None)
    6 :             Get TK.IDNT(IDENTIFIER, 'c', V=None)
    7 :             ApplyChainProd TK.APPLY(UNARY, '', V=None)
    8 :                 Ref TK.IDNT(IDENTIFIER, 'd', V=None)
    9 :         ApplyChainProd TK.APPLY(UNARY, '', V=None)
   10 :             Ref TK.IDNT(IDENTIFIER, 'e', V=None)
   11 :     Get TK.IDNT(IDENTIFIER, 'f', V=None)
   12 :     BinOp TK.GTR(BINOP, '>', V=None)
   13 :         Get TK.IDNT(IDENTIFIER, 'g', V=None)
   14 :         Get TK.IDNT(IDENTIFIER, 'h', V=None)
