

test: 58:
{ _ => _.left = _.right}:(node)

tree1:  { _ => _.left = _.right}:(node)
    1  : Define(TK.DEFINE, TK.DEFINE, ':')
    2  :     Block(TK.BLOCK, v=[DefineFn()], '')
    3  :         DefineFn(TK.DEFINE, TK.DEFINE, '=>')
    4  :             Ref(TK.ANON, '_')
    5  :             PropRef(TK.REF, '.')
    6  :                 Ref(TK.ANON, '_')
    7  :                 Ref(TK.IDNT, 'right')
    8  :             List(TK.TUPLE, [PropRef()])
    9  :                 PropRef(TK.REF, '.')
   10  :                     Ref(TK.ANON, '_')
   11  :                     Ref(TK.IDNT, 'left')
   12  :     Get(TK.IDNT, 'node')

tree1:(post)  { _ => _.left = _.right}:(node)
    1  : Define(TK.DEFINE, TK.DEFINE, ':')
    2  :     Block(TK.BLOCK, v=[DefineFn()], '')
    3  :         DefineFn(TK.DEFINE, TK.DEFINE, '=>')
    4  :             Ref(TK.ANON, '_')
    5  :             PropRef(TK.REF, '.')
    6  :                 Ref(TK.ANON, '_')
    7  :                 Ref(TK.IDNT, 'right')
    8  :             List(TK.TUPLE, [PropRef()])
    9  :                 PropRef(TK.REF, '.')
   10  :                     Ref(TK.ANON, '_')
   11  :                     Ref(TK.IDNT, 'left')
   12  :     Get(TK.IDNT, 'node')
