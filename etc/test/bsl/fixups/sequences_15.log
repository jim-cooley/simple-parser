

test: 15: "a.b(x,y) | c"

tree1:  a.b(x,y) | c
result: PropRef(BinOp(TK.DEF(BINOP, '.', V=None): l=Ident(a), r=BinOp(TK.FUNCTION(BINOP, '(', V=None): l=Ident(b), r=[Ident(x),Ident(y)])
    1 : List TK.CHAIN(LIST, '|', V=[PropRef(), Ident()])
    2 :     PropRef TK.DEF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    4 :         FnCall TK.FUNCTION(BINOP, '(', V=None)
    5 :             Ident TK.IDNT(IDENTIFIER, 'b', V=b)
    6 :             List TK.TUPLE(LIST, '(', V=[Ident(), Ident()])
    7 :                 Ident TK.IDNT(IDENTIFIER, 'x', V=x)
    8 :                 Ident TK.IDNT(IDENTIFIER, 'y', V=y)
    9 :     Ident TK.IDNT(IDENTIFIER, 'c', V=c)

tree1:(post)  a.b(x,y) | c
result: PropRef(BinOp(TK.DEF(BINOP, '.', V=None): l=Ident(a), r=BinOp(TK.FUNCTION(BINOP, '(', V=None): l=Ident(b), r=[Ident(x),Ident(y)])
    1 : List TK.CHAIN(LIST, '|', V=[PropRef(), Ident()])
    2 :     PropRef TK.DEF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    4 :         FnCall TK.FUNCTION(BINOP, '(', V=None)
    5 :             Ident TK.IDNT(IDENTIFIER, 'b', V=b)
    6 :             List TK.TUPLE(LIST, '(', V=[Ident(), Ident()])
    7 :                 Ident TK.IDNT(IDENTIFIER, 'x', V=x)
    8 :                 Ident TK.IDNT(IDENTIFIER, 'y', V=y)
    9 :     Ident TK.IDNT(IDENTIFIER, 'c', V=c)
