

test:
"# sample rules file for pyser / qtradr

%%yahoo (file='spq500.csv', 2y)
%%backtest (rules, period='train')
%%report { report >> rules }

#
periods = {
    train: (today-2y)..today
}
sma_period = [3,5,10..20,28]

# productions: new datasets
atr := (high + low) / 2
median_price := (open + close) / 2
price10a := price.delay(1d)[10:00]

report := { trades | select('symbol', 'buy_date', 'buy_price', 'sell_date', 'sell_price') }


rules: {
    baseline = {
        buy: any:{ close >| sma(10), close >| sma(20), sma(10) >| sma(20) }:(threshold=0.01) | signal >> delay(1d) | atr,
        sell: close <| sma(10) | signal >> delay(1d) | atr
    },
    scenario = {
        buy: { close >| sma(sma_period) } | signal >> atr.delay(1d),
        sell: close <| sma(sma_period) | signal >> atr.delay(1d)
    }
}
"

tree1:  periods = {
result: Lit(None)

tree2:  sma_period = [3,5,10..20,28]
result: Lit(None)

tree3:  atr := (high + low) / 2
result: Lit(None)

tree4:  median_price := (open + close) / 2
result: Lit(None)

tree5:  price10a := price.delay(1d)[10:00]
result: Lit(None)

tree6:  price10a := price.delay(1d)[10:00]
result: list([Time()])

tree7:  report := { trades | select('symbol', 'buy_date', 'buy_price', 'sell_date', 'sell_price') }
result: Lit(None)

tree8:  rules: {
result: Lit(None)

tree1:(post)  periods = {
result: Lit(None)

tree2:(post)  sma_period = [3,5,10..20,28]
result: Lit(None)

tree3:(post)  atr := (high + low) / 2
result: Lit(None)

tree4:(post)  median_price := (open + close) / 2
result: Lit(None)

tree5:(post)  price10a := price.delay(1d)[10:00]
result: Lit(None)

tree6:(post)  price10a := price.delay(1d)[10:00]
result: list([Time()])

tree7:(post)  report := { trades | select('symbol', 'buy_date', 'buy_price', 'sell_date', 'sell_price') }
result: Lit(None)

tree8:(post)  rules: {
result: Lit(None)

tree1:  %%yahoo (file='spq500.csv', 2y)

tree2:  %%backtest (rules, period='train')

tree3:  %%report { report >> rules }
