

test: "a = 4
s = { a=5 }
s.b = s.a * a
s.b
++s.b

"

tree1:  a = 4
result: None
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    3 :     Int TK.INT(LITERAL, '4', V=4)

tree2:  s = { a=5 }
result: None
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 's', V=s)
    3 :     Set TK.SET(SET, '{', V=[BinOp()])
    4 :         BinOp TK.ASSIGN(BINOP, '=', V=None)
    5 :             Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    6 :             Int TK.INT(LITERAL, '5', V=5)

tree3:  s.b = s.a * a
result: None
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     PropRef TK.DEF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 's', V=s)
    4 :         Ident TK.IDNT(IDENTIFIER, 'b', V=b)
    5 :     BinOp TK.MUL(BINOP, '*', V=None)
    6 :         PropRef TK.REF(BINOP, '.', V=None)
    7 :             Ident TK.IDNT(IDENTIFIER, 's', V=s)
    8 :             Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    9 :         Ident TK.IDNT(IDENTIFIER, 'a', V=a)

tree4:  s.b
result: None
    1 : PropRef TK.DEF(BINOP, '.', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 's', V=s)
    3 :     Ident TK.IDNT(IDENTIFIER, 'b', V=b)

tree5:  ++s.b
result: None
    1 : UnaryOp TK.INCREMENT(UNARY, '++', V=None)
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 's', V=s)
    4 :         Ident TK.IDNT(IDENTIFIER, 'b', V=b)

tree1:(post)  a = 4
result: None
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    3 :     Int TK.INT(LITERAL, '4', V=4)

tree2:(post)  s = { a=5 }
result: None
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 's', V=s)
    3 :     Set TK.SET(SET, '{', V=[BinOp()])
    4 :         BinOp TK.TUPLE(BINOP, '=', V=None)
    5 :             Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    6 :             Int TK.INT(LITERAL, '5', V=5)

tree3:(post)  s.b = s.a * a
result: None
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     PropRef TK.DEF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 's', V=s)
    4 :         Ident TK.IDNT(IDENTIFIER, 'b', V=b)
    5 :     BinOp TK.MUL(BINOP, '*', V=None)
    6 :         PropRef TK.REF(BINOP, '.', V=None)
    7 :             Ident TK.IDNT(IDENTIFIER, 's', V=s)
    8 :             Ident TK.IDNT(IDENTIFIER, 'a', V=a)
    9 :         Ident TK.IDNT(IDENTIFIER, 'a', V=a)

tree4:(post)  s.b
result: None
    1 : PropRef TK.DEF(BINOP, '.', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 's', V=s)
    3 :     Ident TK.IDNT(IDENTIFIER, 'b', V=b)

tree5:(post)  ++s.b
result: None
    1 : UnaryOp TK.INCREMENT(UNARY, '++', V=None)
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 's', V=s)
    4 :         Ident TK.IDNT(IDENTIFIER, 'b', V=b)
