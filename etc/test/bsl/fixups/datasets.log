

test:
# datasets:
pd = dataset()

df = {
    "one": Series( rand(3) ) : { index=["a", "b", "c"] },

    "two": Series( rand(4) ) : index=["a", "b", "c", "d"],

    "three": Series( rand(3), index=["b", "c", "d"] ),
}

=
pd = dataset(df)    # would be nice if df was already a dataframe from the decl above.


df = {
    "one": { rand(3) => _ } : index=['a', 'b', 'c']
}


tree1:  pd = dataset()
    1  : Define(TK.DEFINE, TK.EQLS, '=')
    2  :     Ref(TK.IDNT, 'pd')
    3  :     FnCall('dataset')
    4  :         Get(TK.DATASET, 'dataset')
    5  :         List(TK.TUPLE, [])

tree2:  df = {
    1  : Define(TK.DEFINE, TK.EQLS, '=')
    2  :     Ref(TK.IDNT, 'df')
    3  :     Define(TK.DEFINE, TK.EQLS, '=')
    4  :         Block(TK.BLOCK, v=[Define(), Define(), Define()], '')
    5  :             Define(TK.DEFINE, TK.COLN, ':')
    6  :                 Str(TK.STR, one)
    7  :                 DefineFn(TK.DEFINE, TK.COLN, ':')
    8  :                     Ref(TK.IDNT, 'Series')
    9  :                     Set(TK.SET, [Define()])
   10  :                         Define(TK.DEFINE, TK.EQLS, '=')
   11  :                             Ref(TK.IDNT, 'index')
   12  :                             List(TK.LIST, [Str(), Str(), Str()])
   13  :                                 Str(TK.STR, a)
   14  :                                 Str(TK.STR, b)
   15  :                                 Str(TK.STR, c)
   16  :                     List(TK.TUPLE, [FnCall()])
   17  :                         FnCall('rand')
   18  :                             Ref(TK.IDNT, 'rand')
   19  :                             List(TK.TUPLE, [Int()])
   20  :                                 Int(TK.INT, 3)
   21  :             Define(TK.DEFINE, TK.COLN, ':')
   22  :                 Str(TK.STR, two)
   23  :                 DefineFn(TK.DEFINE, TK.COLN, ':')
   24  :                     Ref(TK.IDNT, 'Series')
   25  :                     Define(TK.DEFINE, TK.EQLS, '=')
   26  :                         Ref(TK.IDNT, 'index')
   27  :                         List(TK.LIST, [Str(), Str(), Str(), Str()])
   28  :                             Str(TK.STR, a)
   29  :                             Str(TK.STR, b)
   30  :                             Str(TK.STR, c)
   31  :                             Str(TK.STR, d)
   32  :                     List(TK.TUPLE, [FnCall()])
   33  :                         FnCall('rand')
   34  :                             Ref(TK.IDNT, 'rand')
   35  :                             List(TK.TUPLE, [Int()])
   36  :                                 Int(TK.INT, 4)
   37  :             Define(TK.DEFINE, TK.COLN, ':')
   38  :                 Str(TK.STR, three)
   39  :                 FnDef(TK.FUNCTION, '(')
   40  :                     Ref(TK.IDNT, 'Series')
   41  :                     List(TK.TUPLE, [FnDef(), Define()])
   42  :                         FnDef(TK.FUNCTION, '(')
   43  :                             Ref(TK.IDNT, 'rand')
   44  :                             List(TK.TUPLE, [Int()])
   45  :                                 Int(TK.INT, 3)
   46  :                         Define(TK.DEFINE, TK.EQLS, '=')
   47  :                             Ref(TK.IDNT, 'index')
   48  :                             List(TK.LIST, [Str(), Str(), Str()])
   49  :                                 Str(TK.STR, b)
   50  :                                 Str(TK.STR, c)
   51  :                                 Str(TK.STR, d)
   52  :         Define(TK.DEFINE, TK.EQLS, '=')
   53  :             Ref(TK.IDNT, 'pd')
   54  :             FnCall('dataset')
   55  :                 Get(TK.DATASET, 'dataset')
   56  :                 List(TK.TUPLE, [Get()])
   57  :                     Get(TK.IDNT, 'df')

tree3:  df = {
    1  : Define(TK.DEFINE, TK.EQLS, '=')
    2  :     Ref(TK.IDNT, 'df')
    3  :     Block(TK.BLOCK, v=[Define()], '')
    4  :         Define(TK.DEFINE, TK.COLN, ':')
    5  :             Str(TK.STR, one)
    6  :             Define(TK.DEFINE, TK.COLN, ':')
    7  :                 Set(TK.SET, [DefineFn()])
    8  :                     DefineFn(TK.DEFINE, TK.EQGT, '=>')
    9  :                         Ref(TK.IDNT, 'rand')
   10  :                         Ref(TK.ANON, '_')
   11  :                         List(TK.TUPLE, [Int()])
   12  :                             Int(TK.INT, 3)
   13  :                 Define(TK.DEFINE, TK.EQLS, '=')
   14  :                     Ref(TK.IDNT, 'index')
   15  :                     List(TK.LIST, [Str(), Str(), Str()])
   16  :                         Str(TK.STR, a)
   17  :                         Str(TK.STR, b)
   18  :                         Str(TK.STR, c)

tree1:(post)  pd = dataset()
    1  : Define(TK.DEFINE, TK.EQLS, '=')
    2  :     Ref(TK.IDNT, 'pd')
    3  :     FnCall('dataset')
    4  :         Get(TK.DATASET, 'dataset')
    5  :         List(TK.TUPLE, [])

tree2:(post)  df = {
    1  : Define(TK.DEFINE, TK.EQLS, '=')
    2  :     Ref(TK.IDNT, 'df')
    3  :     Define(TK.DEFINE, TK.EQLS, '=')
    4  :         Block(TK.BLOCK, v=[Define(), Define(), Define()], '')
    5  :             Define(TK.DEFINE, TK.COLN, ':')
    6  :                 Str(TK.STR, one)
    7  :                 DefineFn(TK.DEFINE, TK.COLN, ':')
    8  :                     Ref(TK.IDNT, 'Series')
    9  :                     Set(TK.SET, [Define()])
   10  :                         Define(TK.DEFINE, TK.EQLS, '=')
   11  :                             Ref(TK.IDNT, 'index')
   12  :                             List(TK.LIST, [Str(), Str(), Str()])
   13  :                                 Str(TK.STR, a)
   14  :                                 Str(TK.STR, b)
   15  :                                 Str(TK.STR, c)
   16  :                     List(TK.TUPLE, [FnCall()])
   17  :                         FnCall('rand')
   18  :                             Ref(TK.IDNT, 'rand')
   19  :                             List(TK.TUPLE, [Int()])
   20  :                                 Int(TK.INT, 3)
   21  :             Define(TK.DEFINE, TK.COLN, ':')
   22  :                 Str(TK.STR, two)
   23  :                 DefineFn(TK.DEFINE, TK.COLN, ':')
   24  :                     Ref(TK.IDNT, 'Series')
   25  :                     Define(TK.DEFINE, TK.EQLS, '=')
   26  :                         Ref(TK.IDNT, 'index')
   27  :                         List(TK.LIST, [Str(), Str(), Str(), Str()])
   28  :                             Str(TK.STR, a)
   29  :                             Str(TK.STR, b)
   30  :                             Str(TK.STR, c)
   31  :                             Str(TK.STR, d)
   32  :                     List(TK.TUPLE, [FnCall()])
   33  :                         FnCall('rand')
   34  :                             Ref(TK.IDNT, 'rand')
   35  :                             List(TK.TUPLE, [Int()])
   36  :                                 Int(TK.INT, 4)
   37  :             Define(TK.DEFINE, TK.COLN, ':')
   38  :                 Str(TK.STR, three)
   39  :                 FnDef(TK.FUNCTION, '(')
   40  :                     Ref(TK.IDNT, 'Series')
   41  :                     List(TK.TUPLE, [FnDef(), Define()])
   42  :                         FnDef(TK.FUNCTION, '(')
   43  :                             Ref(TK.IDNT, 'rand')
   44  :                             List(TK.TUPLE, [Int()])
   45  :                                 Int(TK.INT, 3)
   46  :                         Define(TK.DEFINE, TK.EQLS, '=')
   47  :                             Ref(TK.IDNT, 'index')
   48  :                             List(TK.LIST, [Str(), Str(), Str()])
   49  :                                 Str(TK.STR, b)
   50  :                                 Str(TK.STR, c)
   51  :                                 Str(TK.STR, d)
   52  :         Define(TK.DEFINE, TK.EQLS, '=')
   53  :             Ref(TK.IDNT, 'pd')
   54  :             FnCall('dataset')
   55  :                 Get(TK.DATASET, 'dataset')
   56  :                 List(TK.TUPLE, [Get()])
   57  :                     Get(TK.IDNT, 'df')

tree3:(post)  df = {
    1  : Define(TK.DEFINE, TK.EQLS, '=')
    2  :     Ref(TK.IDNT, 'df')
    3  :     Block(TK.BLOCK, v=[Define()], '')
    4  :         Define(TK.DEFINE, TK.COLN, ':')
    5  :             Str(TK.STR, one)
    6  :             Define(TK.DEFINE, TK.COLN, ':')
    7  :                 Set(TK.SET, [DefineFn()])
    8  :                     DefineFn(TK.DEFINE, TK.EQGT, '=>')
    9  :                         Ref(TK.IDNT, 'rand')
   10  :                         Ref(TK.ANON, '_')
   11  :                         List(TK.TUPLE, [Int()])
   12  :                             Int(TK.INT, 3)
   13  :                 Define(TK.DEFINE, TK.EQLS, '=')
   14  :                     Ref(TK.IDNT, 'index')
   15  :                     List(TK.LIST, [Str(), Str(), Str()])
   16  :                         Str(TK.STR, a)
   17  :                         Str(TK.STR, b)
   18  :                         Str(TK.STR, c)
