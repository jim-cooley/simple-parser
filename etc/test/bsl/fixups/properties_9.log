

test: 9:
"a().b.c().d()"

tree1:  a().b.c().d()
result: Lit(None)
    1 : BinOp TK.DOT(BINOP, '.', V=None)
    2 :     BinOp TK.DOT(BINOP, '.', V=None)
    3 :         FnCall TK.FUNCTION(BINOP, '(', V=None)
    4 :             Get TK.IDNT(IDENTIFIER, 'a', V=None)
    5 :             List TK.TUPLE(LITERAL, '(', V=[])
    6 :         PropRef TK.REF(BINOP, '.', V=None)
    7 :             Get TK.IDNT(IDENTIFIER, 'b', V=None)
    8 :             FnCall TK.FUNCTION(BINOP, '(', V=None)
    9 :                 Get TK.IDNT(IDENTIFIER, 'c', V=None)
   10 :                 List TK.TUPLE(LITERAL, '(', V=[])
   11 :     FnCall TK.FUNCTION(BINOP, '(', V=None)
   12 :         Get TK.IDNT(IDENTIFIER, 'd', V=None)
   13 :         List TK.TUPLE(LITERAL, '(', V=[])

tree1:(post)  a().b.c().d()
result: Lit(None)
    1 : BinOp TK.DOT(BINOP, '.', V=None)
    2 :     BinOp TK.DOT(BINOP, '.', V=None)
    3 :         FnCall TK.FUNCTION(BINOP, '(', V=None)
    4 :             Get TK.IDNT(IDENTIFIER, 'a', V=None)
    5 :             List TK.TUPLE(LITERAL, '(', V=[])
    6 :         PropRef TK.REF(BINOP, '.', V=None)
    7 :             Get TK.IDNT(IDENTIFIER, 'b', V=None)
    8 :             FnCall TK.FUNCTION(BINOP, '(', V=None)
    9 :                 Get TK.IDNT(IDENTIFIER, 'c', V=None)
   10 :                 List TK.TUPLE(LITERAL, '(', V=[])
   11 :     FnCall TK.FUNCTION(BINOP, '(', V=None)
   12 :         Get TK.IDNT(IDENTIFIER, 'd', V=None)
   13 :         List TK.TUPLE(LITERAL, '(', V=[])
