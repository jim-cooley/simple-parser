

test: 21:
"(a, b, c) = (a:5, b:3, c:4)  # tuple assignment k:v"

tree1:  (a, b, c) = (a:5, b:3, c:4)  # tuple assignment k:v
result: Lit(None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     List TK.TUPLE(LITERAL, '(', V=[Ref(), Ref(), Ref()])
    3 :         Ref TK.IDNT(IDENTIFIER, 'a', V=None)
    4 :         Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    5 :         Ref TK.IDNT(IDENTIFIER, 'c', V=None)
    6 :     List TK.TUPLE(LITERAL, '(', V=[Define(), Define(), Define()])
    7 :         Define TK.COLN(NONE, ':', V=None)
    8 :             Ref TK.IDNT(IDENTIFIER, 'a', V=None)
    9 :             Int TK.INT(LITERAL, '5', V=5)
   10 :         Define TK.COLN(NONE, ':', V=None)
   11 :             Ref TK.IDNT(IDENTIFIER, 'b', V=None)
   12 :             Int TK.INT(LITERAL, '3', V=3)
   13 :         Define TK.COLN(NONE, ':', V=None)
   14 :             Ref TK.IDNT(IDENTIFIER, 'c', V=None)
   15 :             Int TK.INT(LITERAL, '4', V=4)

tree1:(post)  (a, b, c) = (a:5, b:3, c:4)  # tuple assignment k:v
result: Lit(None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     List TK.TUPLE(LITERAL, '(', V=[Ref(), Ref(), Ref()])
    3 :         Ref TK.IDNT(IDENTIFIER, 'a', V=None)
    4 :         Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    5 :         Ref TK.IDNT(IDENTIFIER, 'c', V=None)
    6 :     List TK.TUPLE(LITERAL, '(', V=[Define(), Define(), Define()])
    7 :         Define TK.COLN(NONE, ':', V=None)
    8 :             Ref TK.IDNT(IDENTIFIER, 'a', V=None)
    9 :             Int TK.INT(LITERAL, '5', V=5)
   10 :         Define TK.COLN(NONE, ':', V=None)
   11 :             Ref TK.IDNT(IDENTIFIER, 'b', V=None)
   12 :             Int TK.INT(LITERAL, '3', V=3)
   13 :         Define TK.COLN(NONE, ':', V=None)
   14 :             Ref TK.IDNT(IDENTIFIER, 'c', V=None)
   15 :             Int TK.INT(LITERAL, '4', V=4)
