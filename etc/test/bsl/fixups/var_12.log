

test: 12:
f.a = { var a(x):x*x }

tree1:  f.a = { var a(x):x*x }
    1  : Define(TK.DEFINE, TK.DEFINE, '=')
    2  :     PropRef(TK.REF, '.')
    3  :         Ref(TK.IDENT, 'f')
    4  :         Ref(TK.IDENT, 'a')
    5  :     Block(TK.BLOCK, v=[DefineVarFn()], '')
    6  :         DefineVarFn(TK.DEFINE, TK.DEFINE, ':')
    7  :             Ref(TK.IDENT, 'a')
    8  :             BinOp(TK.MUL, '*')
    9  :                 Ref(TK.IDENT, 'x')
   10  :                 Ref(TK.IDENT, 'x')
   11  :             List(TK.LIST, [Ref()])
   12  :                 Ref(TK.IDENT, 'x')

tree1:(post)  f.a = { var a(x):x*x }
    1  : Define(TK.DEFINE, TK.DEFINE, '=')
    2  :     PropRef(TK.REF, '.')
    3  :         Ref(TK.IDENT, 'f')
    4  :         Ref(TK.IDENT, 'a')
    5  :     Block(TK.BLOCK, v=[DefineVarFn()], '')
    6  :         DefineVarFn(TK.DEFINE, TK.DEFINE, ':')
    7  :             Ref(TK.IDENT, 'a')
    8  :             BinOp(TK.MUL, '*')
    9  :                 Ref(TK.IDENT, 'x')
   10  :                 Ref(TK.IDENT, 'x')
   11  :             List(TK.LIST, [Ref()])
   12  :                 Ref(TK.IDENT, 'x')
