

test: 8: "{close.sma(20) and close.sma(50)} | diff | sign | signal(how='cross')"

tree1:  "{close.sma(20) and close.sma(50)} | diff | sign | signal(how='cross')"
    1 : List TK.PIPE(LIST, '|', V=[Set(), Ident(), Ident(), FnCall()])
    2 :     Set TK.SET(SET, '{', V=[BinOp()])
    3 :         BinOp TK.AND(BINOP, 'and', V=None)
    4 :             PropRef TK.REF(BINOP, '.', V=None)
    5 :                 Ident TK.IDNT(DATASET, 'close', V=None)
    6 :                 FnCall TK.FUNCTION(BINOP, '(', V=None)
    7 :                     Ident TK.IDNT(FUNCTION, 'sma', V=None)
    8 :                     List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
    9 :                         Int TK.INT(LITERAL, '20', V=20)
   10 :             PropRef TK.REF(BINOP, '.', V=None)
   11 :                 Ident TK.IDNT(DATASET, 'close', V=None)
   12 :                 FnCall TK.FUNCTION(BINOP, '(', V=None)
   13 :                     Ident TK.IDNT(FUNCTION, 'sma', V=None)
   14 :                     List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
   15 :                         Int TK.INT(LITERAL, '50', V=50)
   16 :     Ident TK.IDNT(IDENTIFIER, 'diff', V=None)
   17 :     Ident TK.IDNT(IDENTIFIER, 'sign', V=None)
   18 :     FnCall TK.FUNCTION(BINOP, '(', V=None)
   19 :         Ident TK.SIGNAL(KEYWORD, 'signal', V=None)
   20 :         List TK.PARAMETER_LIST(LIST, '(', V=[BinOp()])
   21 :             BinOp TK.ASSIGN(BINOP, '=', V=None)
   22 :                 Ident TK.IDNT(IDENTIFIER, 'how', V=None)
   23 :                 Str TK.STR(LITERAL, 'cross', V=cross)

tree1:  "{close.sma(20) and close.sma(50)} | diff | sign | signal(how='cross')"
    1 : List TK.PIPE(LIST, '|', V=[Set(), Ident(), Ident(), FnCall()])
    2 :     Set TK.SET(SET, '{', V=[BinOp()])
    3 :         BinOp TK.AND(BINOP, 'and', V=None)
    4 :             PropRef TK.REF(BINOP, '.', V=None)
    5 :                 Ident TK.IDNT(DATASET, 'close', V=None)
    6 :                 FnCall TK.FUNCTION(BINOP, '(', V=None)
    7 :                     Ident TK.IDNT(FUNCTION, 'sma', V=None)
    8 :                     List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
    9 :                         Int TK.INT(LITERAL, '20', V=20)
   10 :             PropRef TK.REF(BINOP, '.', V=None)
   11 :                 Ident TK.IDNT(DATASET, 'close', V=None)
   12 :                 FnCall TK.FUNCTION(BINOP, '(', V=None)
   13 :                     Ident TK.IDNT(FUNCTION, 'sma', V=None)
   14 :                     List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
   15 :                         Int TK.INT(LITERAL, '50', V=50)
   16 :     Ident TK.IDNT(IDENTIFIER, 'diff', V=None)
   17 :     Ident TK.IDNT(IDENTIFIER, 'sign', V=None)
   18 :     FnCall TK.FUNCTION(BINOP, '(', V=None)
   19 :         Ident TK.SIGNAL(KEYWORD, 'signal', V=None)
   20 :         List TK.PARAMETER_LIST(LIST, '(', V=[BinOp()])
   21 :             BinOp TK.TUPLE(BINOP, '=', V=None)
   22 :                 Ident TK.IDNT(IDENTIFIER, 'how', V=None)
   23 :                 Str TK.STR(LITERAL, 'cross', V=cross)
