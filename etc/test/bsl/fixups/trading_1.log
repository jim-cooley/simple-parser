

test: 1: "def atr = (high + low) / 2; median = (close + open) /2"

tree1:  "def atr = (high + low) / 2; median = (close + open) /2"
    1 : UnaryOp TK.DEFINE(UNARY, 'def', V=None)
    2 :     BinOp TK.ASSIGN(BINOP, '=', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 'atr', V=None)
    4 :         BinOp TK.DIV(BINOP, '/', V=None)
    5 :             BinOp TK.ADD(BINOP, '+', V=None)
    6 :                 Ident TK.IDNT(DATASET, 'high', V=None)
    7 :                 Ident TK.IDNT(DATASET, 'low', V=None)
    8 :             Int TK.INT(LITERAL, '2', V=2)

tree2:  "def atr = (high + low) / 2; median = (close + open) /2"
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 'median', V=None)
    3 :     BinOp TK.DIV(BINOP, '/', V=None)
    4 :         BinOp TK.ADD(BINOP, '+', V=None)
    5 :             Ident TK.IDNT(DATASET, 'close', V=None)
    6 :             Ident TK.IDNT(DATASET, 'open', V=None)
    7 :         Int TK.INT(LITERAL, '2', V=2)

tree1:(post)  "def atr = (high + low) / 2; median = (close + open) /2"
    1 : UnaryOp TK.DEFINE(UNARY, 'def', V=None)
    2 :     BinOp TK.ASSIGN(BINOP, '=', V=None)
    3 :         Ident TK.IDNT(IDENTIFIER, 'atr', V=None)
    4 :         BinOp TK.DIV(BINOP, '/', V=None)
    5 :             BinOp TK.ADD(BINOP, '+', V=None)
    6 :                 Ident TK.IDNT(DATASET, 'high', V=None)
    7 :                 Ident TK.IDNT(DATASET, 'low', V=None)
    8 :             Int TK.INT(LITERAL, '2', V=2)

tree2:(post)  "def atr = (high + low) / 2; median = (close + open) /2"
    1 : BinOp TK.ASSIGN(BINOP, '=', V=None)
    2 :     Ident TK.IDNT(IDENTIFIER, 'median', V=None)
    3 :     BinOp TK.DIV(BINOP, '/', V=None)
    4 :         BinOp TK.ADD(BINOP, '+', V=None)
    5 :             Ident TK.IDNT(DATASET, 'close', V=None)
    6 :             Ident TK.IDNT(DATASET, 'open', V=None)
    7 :         Int TK.INT(LITERAL, '2', V=2)
