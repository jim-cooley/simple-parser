

test: 3:
var f.a.b.c(x) = x*x

tree1:  var f.a.b.c(x) = x*x
    1  : DefineVar(TK.EOF: f  PropRef(TK.REF, '.'))
    2  :     Ref(TK.IDENT, 'f')
    3  :     PropRef(TK.REF: a . PropCall(TK.PROPCALL, 'b'))
    4  :         Ref(TK.IDENT, 'a')
    5  :         PropCall(TK.PROPCALL, 'b')
    6  :             Ref(TK.IDENT, 'b')
    7  :             List(TK.LIST, [Ref()])
    8  :                 Ref(TK.IDENT, 'x')

tree1:(post)  var f.a.b.c(x) = x*x
    1  : DefineVar(TK.EOF: f  PropRef(TK.REF, '.'))
    2  :     Ref(TK.IDENT, 'f')
    3  :     PropRef(TK.REF: a . PropCall(TK.PROPCALL, 'b'))
    4  :         Ref(TK.IDENT, 'a')
    5  :         PropCall(TK.PROPCALL, 'b')
    6  :             Ref(TK.IDENT, 'b')
    7  :             List(TK.LIST, [Ref()])
    8  :                 Ref(TK.IDENT, 'x')
