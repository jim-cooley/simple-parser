

test:
"#4
#4 * 3
a = 4
s = { a=5 }
s.a
s.b = s.a * a
s.b
#
b = a * 3
c = b
s = { a=5 }
s.b = s.a * a
s.b
++s.b

"

tree1:(post)  a = 4
result: int(4)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'a', V=None)
    3 :     Int TK.INT(LITERAL, '4', V=4)

tree2:(post)  s = { a=5 }
result: Object(s = None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 's', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree3:(post)  s.a
result: int(5)
    1 : PropRef TK.REF(BINOP, '.', V=None)
    2 :     Get TK.IDNT(IDENTIFIER, 's', V=None)
    3 :     Get TK.IDNT(IDENTIFIER, 'a', V=None)

tree4:(post)  s.b = s.a * a
result: int(20)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ref TK.IDNT(IDENTIFIER, 's', V=None)
    4 :         Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    5 :     BinOp TK.MUL(BINOP, '*', V=None)
    6 :         PropRef TK.REF(BINOP, '.', V=None)
    7 :             Get TK.IDNT(IDENTIFIER, 's', V=None)
    8 :             Get TK.IDNT(IDENTIFIER, 'a', V=None)
    9 :         Get TK.IDNT(IDENTIFIER, 'a', V=None)

tree5:(post)  s.b
result: int(20)
    1 : PropRef TK.REF(BINOP, '.', V=None)
    2 :     Get TK.IDNT(IDENTIFIER, 's', V=None)
    3 :     Get TK.IDNT(IDENTIFIER, 'b', V=None)

tree6:(post)  b = a * 3
result: int(12)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    3 :     BinOp TK.MUL(BINOP, '*', V=None)
    4 :         Get TK.IDNT(IDENTIFIER, 'a', V=None)
    5 :         Int TK.INT(LITERAL, '3', V=3)

tree7:(post)  c = b
result: int(12)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 'c', V=None)
    3 :     Get TK.IDNT(IDENTIFIER, 'b', V=None)

tree8:(post)  s = { a=5 }
result: Object(s = None)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     Ref TK.IDNT(IDENTIFIER, 's', V=None)
    3 :     Block TK.BLOCK(SCOPE, '', V=None)

tree9:(post)  s.b = s.a * a
result: int(20)
    1 : Define TK.EQLS(BINOP, '=', V=None)
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ref TK.IDNT(IDENTIFIER, 's', V=None)
    4 :         Ref TK.IDNT(IDENTIFIER, 'b', V=None)
    5 :     BinOp TK.MUL(BINOP, '*', V=None)
    6 :         PropRef TK.REF(BINOP, '.', V=None)
    7 :             Get TK.IDNT(IDENTIFIER, 's', V=None)
    8 :             Get TK.IDNT(IDENTIFIER, 'a', V=None)
    9 :         Get TK.IDNT(IDENTIFIER, 'a', V=None)

tree10:(post)  s.b
result: int(20)
    1 : PropRef TK.REF(BINOP, '.', V=None)
    2 :     Get TK.IDNT(IDENTIFIER, 's', V=None)
    3 :     Get TK.IDNT(IDENTIFIER, 'b', V=None)

tree11:(post)  ++s.b
result: int(21)
    1 : UnaryOp TK.INCREMENT(UNARY, '++', V=None)
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Get TK.IDNT(IDENTIFIER, 's', V=None)
    4 :         Get TK.IDNT(IDENTIFIER, 'b', V=None)


symbols: 

global scope:
    0:  `a`: a : Object(TK.IDNT(IDENTIFIER, 'a', V=4))
    1:  `s`: s : Object(TK.IDNT(IDENTIFIER, 's', V=None))
    2:  `b`: b : Object(TK.IDNT(IDENTIFIER, 'b', V=12))
    3:  `c`: c : Object(TK.IDNT(IDENTIFIER, 'c', V=12))

scope: s
    4:  `a`: s.a : Object(TK.IDNT(IDENTIFIER, 'a', V=5))
    5:  `b`: s.b : Object(TK.IDNT(IDENTIFIER, 'b', V=21))
