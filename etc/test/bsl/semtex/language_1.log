

test: 1: "close.sma(13) | signal(price, how='>')"

tree1:
    1 : List TK.PIPE(LIST, '|', V=[PropRef(), FnCall()])
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(DATASET, 'close', V=)
    4 :         FnCall TK.FUNCTION(BINOP, '(', V=None)
    5 :             Ident TK.IDNT(FUNCTION, 'sma', V=)
    6 :             List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
    7 :                 Int TK.INT(LITERAL, '13', V=13)
    8 :     FnCall TK.FUNCTION(BINOP, '(', V=None)
    9 :         Ident TK.SIGNAL(KEYWORD, 'signal', V=)
   10 :         List TK.PARAMETER_LIST(LIST, '(', V=[Ident(), BinOp()])
   11 :             Ident TK.IDNT(IDENTIFIER, 'price', V=)
   12 :             BinOp TK.ASSIGN(BINOP, '=', V=None)
   13 :                 Ident TK.IDNT(IDENTIFIER, 'how', V=)
   14 :                 Str TK.STR(LITERAL, '>', V=>)

tree1:
    1 : List TK.PIPE(LIST, '|', V=[PropRef(), FnCall()])
    2 :     PropRef TK.REF(BINOP, '.', V=None)
    3 :         Ident TK.IDNT(DATASET, 'close', V=)
    4 :         FnCall TK.FUNCTION(BINOP, '(', V=None)
    5 :             Ident TK.IDNT(FUNCTION, 'sma', V=)
    6 :             List TK.PARAMETER_LIST(LIST, '(', V=[Int()])
    7 :                 Int TK.INT(LITERAL, '13', V=13)
    8 :     FnCall TK.FUNCTION(BINOP, '(', V=None)
    9 :         Ident TK.SIGNAL(KEYWORD, 'signal', V=)
   10 :         List TK.PARAMETER_LIST(LIST, '(', V=[Ident(), BinOp()])
   11 :             Ident TK.IDNT(IDENTIFIER, 'price', V=)
   12 :             BinOp TK.TUPLE(BINOP, '=', V=None)
   13 :                 Ident TK.IDNT(IDENTIFIER, 'how', V=)
   14 :                 Str TK.STR(LITERAL, '>', V=>)
