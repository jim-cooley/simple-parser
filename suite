#!/usr/local/bin/bash
logpath="./etc/test/log"
bslpath="./etc/test/bsl"

prefx=$1
suite=$2


echo "" > "./suite.log"
declare -i pass=0
declare -i total=0
declare -i no_baseline=0

printf "\n\n================================\n"
printf "running tests\n"
printf "================================\n"

start=$(date +%s)
./test_parser.py $suite
end=$(date +%s)

printf "\n\n$((end - start)) seconds\n\n"

printf "\n\n================================\n"
printf "verifying results\n"
printf "================================\n"
for test in $logpath/$prefx$suite*; do
    total=$((total + 1))
    baseline="$bslpath"/"$(basename $test)"
#   printf "$(basename $test):\n"
    if [ -f "$baseline" ]; then
        result="fail"
        diff "$baseline" "$test" >> ./suite.log && result="pass"
        grep -i "exception" "$test" && result="fail (exception)"
        if [ "$result" == "pass" ]; then
            pass=$((pass + 1))
        fi
        printf "$(basename $test):  $result\n"
        printf "$(basename $test):\t$result\n" >> ./suite.log
    else
        reason="no baseline"
        grep -i "exception" "$test" && reason="exception"
        if [ "$reason" == "no baseline" ]; then
            no_baseline=$((no_baseline + 1))
        fi
        printf "$(basename $test):\tfail: $reason\n"
        printf "$(basename $test):\tfail: $reason\n" >> ./suite.log
    fi
done
printf "\n\nresults summary:\n" >> ./suite.log
printf "================================\n" >> ./suite.log
printf "  pass:        $pass\n" >> ./suite.log
printf "  fail:        $((total-pass-no_baseline))\n" >> ./suite.log
printf "  no baseline: $no_baseline\n" >> ./suite.log
printf "  total:       $total\n" >> ./suite.log
printf "================================\n\n" >> ./suite.log
printf "\n\nresults summary:\n"
printf "================================\n"
printf "  pass:        $pass\n"
printf "  fail:        $((total-pass-no_baseline))\n"
printf "  no baseline: $no_baseline\n"
printf "  total:       $total\n"
printf "================================\n\n"

end=$(date +%s)
printf "$((end - start)) seconds\n\n"

printf "\n\n"
